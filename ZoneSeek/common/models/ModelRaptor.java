package ZoneSeek.common.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelRaptor extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer Neck;
    ModelRenderer Head;
    ModelRenderer Nose;
    ModelRenderer Mouth;
    ModelRenderer Chin;
    ModelRenderer FeatherMiddle;
    ModelRenderer FeatherRight;
    ModelRenderer FeatherLeft;
    ModelRenderer ForeheadStrip;
    ModelRenderer RightArm1;
    ModelRenderer RightArm2;
    ModelRenderer RightHand;
    ModelRenderer LeftArm1;
    ModelRenderer LeftArm2;
    ModelRenderer LeftHand;
    ModelRenderer RightLeg1;
    ModelRenderer RightLeg2;
    ModelRenderer RightLeg3;
    ModelRenderer RightFoot1;
    ModelRenderer RightFoot2;
    ModelRenderer RightToe;
    ModelRenderer LeftLeg1;
    ModelRenderer LeftLeg2;
    ModelRenderer LeftLeg3;
    ModelRenderer LeftFoot1;
    ModelRenderer LeftFoot2;
    ModelRenderer LeftToe;
    ModelRenderer Tail1;
    ModelRenderer Tail2;
    ModelRenderer Tail3;
    ModelRenderer Tail4;
    ModelRenderer Tail5;
  
  public ModelRaptor()
  {
    textureWidth = 256;
    textureHeight = 256;
    
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(-7.5F, -6.5F, 0F, 15, 13, 42);
      Body.setRotationPoint(0F, -5F, 0F);
      Body.setTextureSize(256, 256);
      Body.mirror = true;
      setRotation(Body, -0.0743572F, 0F, 0F);
      Neck = new ModelRenderer(this, 0, 55);
      Neck.addBox(-4F, -7F, -17F, 8, 8, 20);
      Neck.setRotationPoint(0F, -5F, 0F);
      Neck.setTextureSize(256, 256);
      Neck.mirror = true;
      setRotation(Neck, -0.3346075F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 83);
      Head.addBox(-5F, -14F, -31F, 10, 10, 20);
      Head.setRotationPoint(0F, -5F, 0F);
      Head.setTextureSize(256, 256);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Nose = new ModelRenderer(this, 0, 1);
      Nose.addBox(-3F, -14F, -42F, 6, 10, 14);
      Nose.setRotationPoint(0F, -5F, 0F);
      Nose.setTextureSize(256, 256);
      Nose.mirror = true;
      setRotation(Nose, 0F, 0F, 0F);
      Mouth = new ModelRenderer(this, 73, 0);
      Mouth.addBox(-2F, -4F, -40F, 4, 1, 12);
      Mouth.setRotationPoint(0F, -5F, 0F);
      Mouth.setTextureSize(256, 256);
      Mouth.mirror = true;
      setRotation(Mouth, 0F, 0F, 0F);
      Chin = new ModelRenderer(this, 73, 13);
      Chin.addBox(-3F, -4F, -29F, 6, 2, 16);
      Chin.setRotationPoint(0F, -5F, 0F);
      Chin.setTextureSize(256, 256);
      Chin.mirror = true;
      setRotation(Chin, 0F, 0F, 0F);
      FeatherMiddle = new ModelRenderer(this, 56, 55);
      FeatherMiddle.addBox(-1F, -17F, -7F, 2, 2, 17);
      FeatherMiddle.setRotationPoint(0F, -5F, 0F);
      FeatherMiddle.setTextureSize(256, 256);
      FeatherMiddle.mirror = true;
      setRotation(FeatherMiddle, 0.3717861F, 0F, 0F);
      FeatherRight = new ModelRenderer(this, 56, 55);
      FeatherRight.addBox(-1F, -16F, -11F, 2, 2, 17);
      FeatherRight.setRotationPoint(0F, -5F, 0F);
      FeatherRight.setTextureSize(256, 256);
      FeatherRight.mirror = true;
      setRotation(FeatherRight, 0.2230717F, 0F, 0.2974289F);
      FeatherLeft = new ModelRenderer(this, 56, 55);
      FeatherLeft.addBox(-1F, -16F, -11F, 2, 2, 17);
      FeatherLeft.setRotationPoint(0F, -5F, 0F);
      FeatherLeft.setTextureSize(256, 256);
      FeatherLeft.mirror = true;
      setRotation(FeatherLeft, 0.2230717F, 0F, -0.2974289F);
      ForeheadStrip = new ModelRenderer(this, 61, 75);
      ForeheadStrip.addBox(-1F, -15F, -25F, 2, 1, 14);
      ForeheadStrip.setRotationPoint(0F, -5F, 0F);
      ForeheadStrip.setTextureSize(256, 256);
      ForeheadStrip.mirror = true;
      setRotation(ForeheadStrip, 0F, 0F, 0F);
      RightArm1 = new ModelRenderer(this, 0, 114);
      RightArm1.addBox(0F, -3F, -3F, 3, 6, 7);
      RightArm1.setRotationPoint(7.5F, -5F, 6F);
      RightArm1.setTextureSize(256, 256);
      RightArm1.mirror = true;
      setRotation(RightArm1, -0.669215F, 0F, 0F);
      RightArm2 = new ModelRenderer(this, 0, 128);
      RightArm2.addBox(0F, 0F, -2F, 2, 13, 4);
      RightArm2.setRotationPoint(7.5F, -5F, 6F);
      RightArm2.setTextureSize(256, 256);
      RightArm2.mirror = true;
      setRotation(RightArm2, -0.669215F, 0F, 0F);
      RightHand = new ModelRenderer(this, 0, 0);
      RightHand.addBox(0.5F, 1F, -12F, 1, 4, 2);
      RightHand.setRotationPoint(7.5F, -5F, 6F);
      RightHand.setTextureSize(256, 256);
      RightHand.mirror = true;
      setRotation(RightHand, 0.8922867F, 0F, 0F);
      LeftArm1 = new ModelRenderer(this, 0, 114);
      LeftArm1.addBox(-3F, -3F, -3F, 3, 6, 7);
      LeftArm1.setRotationPoint(-7.5F, -5F, 6F);
      LeftArm1.setTextureSize(256, 256);
      LeftArm1.mirror = true;
      setRotation(LeftArm1, -0.669215F, 0F, 0F);
      LeftArm2 = new ModelRenderer(this, 0, 128);
      LeftArm2.addBox(-2F, 0F, -2F, 2, 13, 4);
      LeftArm2.setRotationPoint(-7.5F, -5F, 6F);
      LeftArm2.setTextureSize(256, 256);
      LeftArm2.mirror = true;
      setRotation(LeftArm2, -0.669215F, 0F, 0F);
      LeftHand = new ModelRenderer(this, 0, 0);
      LeftHand.addBox(-1.5F, 1F, -12F, 1, 4, 2);
      LeftHand.setRotationPoint(-7.5F, -5F, 6F);
      LeftHand.setTextureSize(256, 256);
      LeftHand.mirror = true;
      setRotation(LeftHand, 0.8922867F, 0F, 0F);
      RightLeg1 = new ModelRenderer(this, 114, 0);
      RightLeg1.addBox(-1F, -5F, -5F, 6, 14, 10);
      RightLeg1.setRotationPoint(7.5F, -3F, 31F);
      RightLeg1.setTextureSize(256, 256);
      RightLeg1.mirror = true;
      setRotation(RightLeg1, 0.2602503F, 0F, 0F);
      RightLeg2 = new ModelRenderer(this, 146, 17);
      RightLeg2.addBox(0F, 5F, 1F, 4, 11, 6);
      RightLeg2.setRotationPoint(7.5F, -3F, 32F);
      RightLeg2.setTextureSize(256, 256);
      RightLeg2.mirror = true;
      setRotation(RightLeg2, -0.4089647F, 0F, 0F);
      RightLeg3 = new ModelRenderer(this, 166, 17);
      RightLeg3.addBox(0F, 11F, -11F, 4, 12, 5);
      RightLeg3.setRotationPoint(7.5F, -3F, 32F);
      RightLeg3.setTextureSize(256, 256);
      RightLeg3.mirror = true;
      setRotation(RightLeg3, 0.4833219F, 0F, 0F);
      RightFoot1 = new ModelRenderer(this, 0, 146);
      RightFoot1.addBox(1.5F, 25F, -6F, 2, 2, 7);
      RightFoot1.setRotationPoint(7.5F, -3F, 32F);
      RightFoot1.setTextureSize(256, 256);
      RightFoot1.mirror = true;
      setRotation(RightFoot1, 0F, 0F, 0F);
      RightFoot2 = new ModelRenderer(this, 0, 156);
      RightFoot2.addBox(0.5F, 21F, 7F, 1, 2, 7);
      RightFoot2.setRotationPoint(7.5F, -3F, 32F);
      RightFoot2.setTextureSize(256, 256);
      RightFoot2.mirror = true;
      setRotation(RightFoot2, -0.5205006F, 0F, 0F);
      RightToe = new ModelRenderer(this, 0, 167);
      RightToe.addBox(0.5F, 22F, 7F, 1, 2, 1);
      RightToe.setRotationPoint(7.5F, -3F, 32F);
      RightToe.setTextureSize(256, 256);
      RightToe.mirror = true;
      setRotation(RightToe, -0.5205006F, 0F, 0F);
      LeftLeg1 = new ModelRenderer(this, 114, 0);
      LeftLeg1.addBox(-5F, -5F, -5F, 6, 14, 10);
      LeftLeg1.setRotationPoint(-7.5F, -3F, 32F);
      LeftLeg1.setTextureSize(256, 256);
      LeftLeg1.mirror = true;
      setRotation(LeftLeg1, 0.2602503F, 0F, 0F);
      LeftLeg2 = new ModelRenderer(this, 146, 17);
      LeftLeg2.addBox(-4F, 5F, 1F, 4, 11, 6);
      LeftLeg2.setRotationPoint(-7.5F, -3F, 32F);
      LeftLeg2.setTextureSize(256, 256);
      LeftLeg2.mirror = true;
      setRotation(LeftLeg2, -0.4089647F, 0F, 0F);
      LeftLeg3 = new ModelRenderer(this, 166, 17);
      LeftLeg3.addBox(-4F, 11F, -11F, 4, 12, 5);
      LeftLeg3.setRotationPoint(-7.5F, -3F, 32F);
      LeftLeg3.setTextureSize(256, 256);
      LeftLeg3.mirror = true;
      setRotation(LeftLeg3, 0.4833219F, 0F, 0F);
      LeftFoot1 = new ModelRenderer(this, 19, 146);
      LeftFoot1.addBox(-3.5F, 25F, -6F, 2, 2, 7);
      LeftFoot1.setRotationPoint(-7.5F, -3F, 32F);
      LeftFoot1.setTextureSize(256, 256);
      LeftFoot1.mirror = true;
      setRotation(LeftFoot1, 0F, 0F, 0F);
      LeftFoot2 = new ModelRenderer(this, 0, 156);
      LeftFoot2.addBox(-1.5F, 21F, 7F, 1, 2, 7);
      LeftFoot2.setRotationPoint(-7.5F, -3F, 32F);
      LeftFoot2.setTextureSize(256, 256);
      LeftFoot2.mirror = true;
      setRotation(LeftFoot2, -0.5205006F, 0F, 0F);
      LeftToe = new ModelRenderer(this, 0, 167);
      LeftToe.addBox(-1.5F, 22F, 7F, 1, 2, 1);
      LeftToe.setRotationPoint(-7.5F, -3F, 32F);
      LeftToe.setTextureSize(256, 256);
      LeftToe.mirror = true;
      setRotation(LeftToe, -0.5205006F, 0F, 0F);
      Tail1 = new ModelRenderer(this, 0, 172);
      Tail1.addBox(-4F, -4F, 0F, 8, 8, 15);
      Tail1.setRotationPoint(0F, -4F, 42F);
      Tail1.setTextureSize(256, 256);
      Tail1.mirror = true;
      setRotation(Tail1, 0F, 0F, 0F);
      Tail2 = new ModelRenderer(this, 0, 196);
      Tail2.addBox(-3F, -3F, 0F, 6, 6, 15);
      Tail2.setRotationPoint(0F, -5F, 57F);
      Tail2.setTextureSize(256, 256);
      Tail2.mirror = true;
      setRotation(Tail2, 0F, 0F, 0F);
      Tail3 = new ModelRenderer(this, 44, 196);
      Tail3.addBox(-2.5F, -2F, 0F, 5, 5, 15);
      Tail3.setRotationPoint(0F, -6F, 72F);
      Tail3.setTextureSize(256, 256);
      Tail3.mirror = true;
      setRotation(Tail3, 0F, 0F, 0F);
      Tail4 = new ModelRenderer(this, 0, 218);
      Tail4.addBox(-2F, -2F, 0F, 4, 4, 15);
      Tail4.setRotationPoint(0F, -6F, 87F);
      Tail4.setTextureSize(256, 256);
      Tail4.mirror = true;
      setRotation(Tail4, 0F, 0F, 0F);
      Tail5 = new ModelRenderer(this, 0, 218);
      Tail5.addBox(-1.5F, -1F, 0F, 3, 3, 15);
      Tail5.setRotationPoint(0F, -7F, 102.3333F);
      Tail5.setTextureSize(256, 256);
      Tail5.mirror = true;
      setRotation(Tail5, 0F, 0F, 0F);
  }
  
  public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
  {
    super.render(par1Entity, par2, par3, par4, par5, par6, par7);
    setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
    Body.render(par7);
    Neck.render(par7);
    Head.render(par7);
    Nose.render(par7);
    Mouth.render(par7);
    Chin.render(par7);
    FeatherMiddle.render(par7);
    FeatherRight.render(par7);
    FeatherLeft.render(par7);
    ForeheadStrip.render(par7);
    RightArm1.render(par7);
    RightArm2.render(par7);
    RightHand.render(par7);
    LeftArm1.render(par7);
    LeftArm2.render(par7);
    LeftHand.render(par7);
    RightLeg1.render(par7);
    RightLeg2.render(par7);
    RightLeg3.render(par7);
    RightFoot1.render(par7);
    RightFoot2.render(par7);
    RightToe.render(par7);
    LeftLeg1.render(par7);
    LeftLeg2.render(par7);
    LeftLeg3.render(par7);
    LeftFoot1.render(par7);
    LeftFoot2.render(par7);
    LeftToe.render(par7);
    Tail1.render(par7);
    Tail2.render(par7);
    Tail3.render(par7);
    Tail4.render(par7);
    Tail5.render(par7);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
      this.Neck.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.Neck.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.Head.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.Head.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.Mouth.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.Mouth.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.Nose.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.Nose.rotateAngleY = par4 / (180F / (float)Math.PI);
      
      this.Chin.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.Chin.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.FeatherMiddle.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.FeatherMiddle.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.FeatherRight.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.FeatherRight.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.FeatherLeft.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.FeatherLeft.rotateAngleY = par4 / (180F / (float)Math.PI);
      
      this.ForeheadStrip.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.ForeheadStrip.rotateAngleY = par4 / (180F / (float)Math.PI);
      
      /**
      this.RightLeg1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightLeg2.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightLeg3.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightFoot1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightFoot2.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightToe.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      
      this.LeftLeg1.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      this.LeftLeg2.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      this.LeftLeg3.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      this.LeftFoot1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.LeftFoot2.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.LeftToe.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      
      this.RightArm1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightArm2.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.RightHand.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      
      this.LeftArm1.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      this.LeftArm2.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      this.LeftHand.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      **/
  }

}
